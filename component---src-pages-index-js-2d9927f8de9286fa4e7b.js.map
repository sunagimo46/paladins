{"version":3,"sources":["webpack:///./src/components/partial/blog_list.js","webpack:///./src/pages/index.js"],"names":["BlogItems","edges","map","edge","node","src","thumbnail","fluid","title","date","updatedAt","slug","BlogList","prependHeadingText","isTagFilted","Wrapper","styled","section","padding","m","color","background_light_gray","borderRadius","boxShadow","s","textSize","h1","margin","xs","breakpoint","mobile_l","Header","div","Heading","h2","text_black","theme_color","white","headingText","toTopButton","to","background_dark_gray","IndexPage","data","useStaticQuery","isTop","aside","allContentfulArticle"],"mappings":"2FAAA,qFA8DMA,EAAY,SAAC,GAajB,OAb6B,EAAXC,MACEC,KAAI,SAACC,GACvB,IAAIC,EAAOD,EAAKC,KACZC,EAAMD,EAAKE,UAAYF,EAAKE,UAAUC,MAAMF,IAAM,GACtD,OACE,kBAAC,IAAD,CACEG,MAAOJ,EAAKI,MACZC,KAAML,EAAKM,UACXL,IAAKA,EACLM,KAAMP,EAAKO,WAOJC,IAvEE,SAAC,GAA4D,IAA1DX,EAAyD,EAAzDA,MAAyD,IAAlDY,0BAAkD,MAA7B,GAA6B,MAAzBC,mBAAyB,SAErEC,EAAUC,IAAOC,QAAV,qEAAGD,CAAH,iNAGAE,IAAQC,EACCC,IAAMC,sBACTC,IAAaH,EAChBI,IAAUC,EAGZC,IAASC,GACPC,IAAOC,GAEFH,IAASC,GAIIG,IAAWC,UAKvCC,EAASf,IAAOgB,IAAV,oEAAGhB,CAAH,6CAKNiB,EAAUjB,IAAOkB,GAAV,qEAAGlB,CAAH,iKAEDS,IAASC,GACJD,IAASC,GAEfN,IAAMe,WACFV,IAASS,GAEThB,IAAQM,EAAON,IAAQC,EACrBD,IAAQM,EAAWJ,IAAMgB,YACpBhB,IAAMiB,OAGtBC,EAAcxB,EAAcD,EAAqB,QAAU,OAC3D0B,EAAczB,EAAc,kBAAC,IAAD,CAAY0B,GAAG,KAAf,WAA0C,KAE5E,OACE,kBAACzB,EAAD,KACE,kBAACgB,EAAD,KACE,kBAACE,EAAD,KAAUK,GACTC,GAEH,kBAACvC,EAAD,CAAWC,MAASA,O,kCCzD1B,wJAYMc,EAAUC,IAAOgB,IAAV,oEAAGhB,CAAH,iDAGSI,IAAMqB,sBA6CbC,UAzCG,WAChB,IAAMC,EAAOC,yBAAe,cA2B5B,OAAO,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAKpC,MAAM,WACX,kBAAC,IAAD,CAAWqC,OAAS,IACpB,kBAAC9B,EAAD,KACE,kBAAC,IAAD,CAAW+B,MAAO,kBAAC,IAAD,OAChB,kBAAC,IAAD,CAAU7C,MAAO0C,EAAKI,qBAAqB9C","file":"component---src-pages-index-js-2d9927f8de9286fa4e7b.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, useStaticQuery} from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport BlogItem from './blog_item'\r\nimport DropButton from './drop_button'\r\nimport { color, padding, margin, borderRadius, textSize , boxShadow, breakpoint} from '../../util/style_property'\r\n\r\nconst BlogList = ({ edges, prependHeadingText = \"\", isTagFilted = false}) => {\r\n\r\n  const Wrapper = styled.section`\r\n    display: block;\r\n    width: 100%;\r\n    padding: ${padding.m};\r\n    background-color: ${color.background_light_gray};\r\n    border-radius: ${borderRadius.m};\r\n    box-shadow: ${boxShadow.s};\r\n\r\n    .drop-button{\r\n      height: ${textSize.h1};\r\n      margin: 0 ${margin.xs};\r\n      .inner{\r\n        line-height: ${textSize.h1};\r\n      }\r\n    }\r\n\r\n    @media screen and (max-width: ${breakpoint.mobile_l}) {\r\n      border-radius: 0;\r\n    }\r\n  `\r\n\r\n  const Header = styled.div`\r\n    display: flex;\r\n    align-items: space-between;\r\n  `\r\n\r\n  const Heading = styled.h2`\r\n    flex: 1;\r\n    height: ${textSize.h1};\r\n    line-height: ${textSize.h1};\r\n    margin: 0;\r\n    color: ${color.text_black};\r\n    font-size: ${textSize.h2};\r\n    box-sizing: border-box;\r\n    padding: 0 ${padding.s} 0 ${padding.m};\r\n    border-left: ${padding.s} solid ${color.theme_color};\r\n    background-color: ${color.white};\r\n  `\r\n\r\n  const headingText = isTagFilted ? prependHeadingText + \"の記事一覧\" : \"記事一覧\"\r\n  const toTopButton = isTagFilted ? <DropButton to=\"/\">記事一覧に戻る</DropButton> : null\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header>\r\n        <Heading>{headingText}</Heading>\r\n        {toTopButton}\r\n      </Header>\r\n      <BlogItems edges = {edges} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst BlogItems = ({edges}) => {\r\n  const items = edges.map((edge) => {\r\n    let node = edge.node\r\n    let src = node.thumbnail ? node.thumbnail.fluid.src : \"\"\r\n    return (\r\n      <BlogItem\r\n        title={node.title}\r\n        date={node.updatedAt}\r\n        src={src}\r\n        slug={node.slug}\r\n      />)\r\n  })\r\n\r\n  return items\r\n}\r\n\r\nexport default BlogList","import React from \"react\"\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport Layout from \"../components/global/global_layout\"\r\nimport ColumnOf2 from \"../components/layout/column_of_2\"\r\nimport KeyVisual from \"../components/partial/key_visual\"\r\nimport BlogList from \"../components/partial/blog_list\"\r\nimport PlofileCard from \"../components/partial/profile_card\"\r\nimport SideBar from \"../components/partial/side_bar\"\r\nimport styled from 'styled-components'\r\nimport { color, padding, margin, borderRadius, textSize } from '../util/style_property'\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  margin: auto;\r\n  background-color: ${color.background_dark_gray};\r\n`\r\n\r\n\r\nconst IndexPage = () => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query{\r\n        allContentfulArticle(sort: {\r\n          fields: createdAt,\r\n          order: DESC\r\n        }){\r\n          edges{\r\n            node{\r\n              title\r\n              slug\r\n              tags{\r\n                name\r\n                slug\r\n              }\r\n              createdAt(formatString: \"YYYY-MM-DD\")\r\n              thumbnail{\r\n                fluid{\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n  return(<Layout>\r\n    <SEO title=\"トップページ\" />\r\n    <KeyVisual isTop = {true}/>\r\n    <Wrapper>\r\n      <ColumnOf2 aside={<SideBar/>}>\r\n        <BlogList edges={data.allContentfulArticle.edges} />\r\n      </ColumnOf2>\r\n    </Wrapper>\r\n  </Layout>)\r\n}\r\n\r\n\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}